"#[doc =\n\" PSP34Receiver is a trait for any contract that wants to support safe transfers from a PSP34\"]\n#[doc =\n\" token smart contract to avoid unexpected tokens in the balance of contract.\"]\n#[doc =\n\" This method is called before a transfer to ensure the recipient of the tokens acknowledges the receipt.\"]\npub trait PSP34Receiver\n{\n    #[doc =\n    \" Ensures that the smart contract allows reception of PSP34 token(s).\"]\n    #[doc =\n    \" Returns `Ok(())` if the contract allows the reception of the token(s) and Error `TransferRejected(String))` otherwise.\"]\n    #[doc = \"\"]\n    #[doc =\n    \" This method will get called on every transfer to check whether the recipient in `transfer`\"]\n    #[doc =\n    \" or `transfer_from` is a contract, and if it is, does it accept tokens.\"]\n    #[doc = \" This is done to prevent contracts from locking tokens forever.\"]\n    #[doc = \"\"]\n    #[doc =\n    \" Returns `PSP34ReceiverError` if the contract does not accept the tokens.\"]\n    #[ink(message)] #[ink(selector = 3145594752u32)] fn\n    before_received(& mut self, operator : AccountId, from : AccountId, id :\n    Id, data : Vec < u8 >,) -> Result < (), PSP34ReceiverError > ;\n}"