import { DispatchError } from '@polkadot/types/interfaces';
import { ApiBase } from '@polkadot/api/types';
import { R as Result } from './contracts-5e7fdfd7.js';

interface CallResult {
    result?: Result<unknown, DispatchError>;
}
interface Contract {
    contract: {
        api: ApiBase<'promise'>;
    };
}
type RegistryErrorMethod = string;

interface IRegistryInfo {
    registry: {
        chainDecimals: (number | undefined)[];
        chainTokens: (string | undefined)[];
    };
}
declare const chainTokenSymbol: (api: IRegistryInfo) => string | undefined;
declare const chainDecimals: (api: IRegistryInfo) => number | undefined;

export { Contract as C, IRegistryInfo as I, RegistryErrorMethod as R, CallResult as a, chainDecimals as b, chainTokenSymbol as c };
