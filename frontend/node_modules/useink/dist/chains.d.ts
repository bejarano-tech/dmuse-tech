type Account = '*25519' | 'secp256k1' | 'Sr25519';
type JsonString = string;
interface Token {
    symbol: string;
    decimals: number;
    existentialDeposit: string;
    onChainId: JsonString | number;
    coingeckoId?: string;
}
interface TokenAsset {
    assetId: string | number;
    symbol: string;
    coingeckoId?: string;
}
type RpcUrl = `ws://${string}` | `wss://${string}`;
interface IChain<T> {
    id: T;
    name: string;
    account: Account;
    subscanUrl?: string;
    overrideNativeTokenId?: string;
    chainspecQrUrl?: string;
    latestMetadataQrUrl?: string;
    rpcs: readonly RpcUrl[];
    coingeckoId?: string | null;
    paraId?: number;
    relay?: {
        id: string;
    };
    balanceModuleConfigs?: {
        [k: string]: {
            disable?: boolean;
            tokens?: readonly (Token | TokenAsset)[];
        };
    };
}

declare const Acala: IChain<'acala'>;
declare const Ajuna: IChain<'ajuna'>;
declare const Aleph: IChain<'aleph'>;
declare const Altair: IChain<'altair'>;
declare const Amplitude: IChain<'amplitude'>;
declare const AresOdyssey: IChain<'ares-odyssey'>;
declare const Astar: IChain<'astar'>;
declare const Automata: IChain<'automata'>;
declare const Aventus: IChain<'aventus'>;
declare const Bajun: IChain<'bajun'>;
declare const Basilisk: IChain<'basilisk'>;
declare const BifrostKusama: IChain<'bifrost-kusama'>;
declare const BifrostPolkadot: IChain<'bifrost-polkadot'>;
declare const BitcountryPioneer: IChain<'bitcountry-pioneer'>;
declare const Bitgreen: IChain<'bitgreen'>;
declare const Bittensor: IChain<'bittensor'>;
declare const Calamari: IChain<'calamari'>;
declare const CentrifugePolkadot: IChain<'centrifuge-polkadot'>;
declare const Chainx: IChain<'chainx'>;
declare const Clover: IChain<'clover'>;
declare const Coinversation: IChain<'coinversation'>;
declare const CompetitorsClub: IChain<'competitors-club'>;
declare const ComposableFinance: IChain<'composable-finance'>;
declare const CrabKusama: IChain<'crab-kusama'>;
declare const CrabStandalone: IChain<'crab-standalone'>;
declare const Creditcoin: IChain<'creditcoin'>;
declare const CrownSterling: IChain<'crown-sterling'>;
declare const Crust: IChain<'crust'>;
declare const CrustParachain: IChain<'crust-parachain'>;
declare const Custom: IChain<'custom'>;
declare const DarwiniaPolkadot: IChain<'darwinia-polkadot'>;
declare const DarwiniaPolkadot2: IChain<'darwinia-polkadot-2'>;
declare const DarwiniaStandalone: IChain<'darwinia-standalone'>;
declare const Debio: IChain<'debio'>;
declare const DockPosMainnet: IChain<'dock-pos-mainnet'>;
declare const Dorafactory: IChain<'dorafactory'>;
declare const Edgeware: IChain<'edgeware'>;
declare const EfinityPolkadot: IChain<'efinity-polkadot'>;
declare const EfinityStandalone: IChain<'efinity-standalone'>;
declare const Encointer: IChain<'encointer'>;
declare const EquilibriumPolkadot: IChain<'equilibrium-polkadot'>;
declare const Frequency: IChain<'frequency'>;
declare const Geminis: IChain<'geminis'>;
declare const GenshiroKusama: IChain<'genshiro-kusama'>;
declare const Gm: IChain<'gm'>;
declare const Hanonycash: IChain<'hanonycash'>;
declare const Hashed: IChain<'hashed'>;
declare const HeikoKusama: IChain<'heiko-kusama'>;
declare const Hydra: IChain<'hydra'>;
declare const Imbue: IChain<'imbue'>;
declare const IntegriteeKusama: IChain<'integritee-kusama'>;
declare const IntegriteePolkadot: IChain<'integritee-polkadot'>;
declare const Interlay: IChain<'interlay'>;
declare const Ipci: IChain<'ipci'>;
declare const Joystream: IChain<'joystream'>;
declare const Kabocha: IChain<'kabocha'>;
declare const Kapex: IChain<'kapex'>;
declare const Karura: IChain<'karura'>;
declare const Khala: IChain<'khala'>;
declare const Kico: IChain<'kico'>;
declare const KiltSpiritnet: IChain<'kilt-spiritnet'>;
declare const Kintsugi: IChain<'kintsugi'>;
declare const Kpron: IChain<'kpron'>;
declare const Kulupu: IChain<'kulupu'>;
declare const Kusama: IChain<'kusama'>;
declare const KusamaBridgeHub: IChain<'kusama-bridge-hub'>;
declare const Kusari: IChain<'kusari'>;
declare const Kylin: IChain<'kylin'>;
declare const Listen: IChain<'listen'>;
declare const Litentry: IChain<'litentry'>;
declare const Litmus: IChain<'litmus'>;
declare const Logion: IChain<'logion'>;
declare const LoomNetwork: IChain<'loom-network'>;
declare const Luhn: IChain<'luhn'>;
declare const Mangata: IChain<'mangata'>;
declare const Manta: IChain<'manta'>;
declare const Mars: IChain<'mars'>;
declare const Mathchain: IChain<'mathchain'>;
declare const Minix: IChain<'minix'>;
declare const Moonbeam: IChain<'moonbeam'>;
declare const Moonriver: IChain<'moonriver'>;
declare const Myriad: IChain<'myriad'>;
declare const Neatcoin: IChain<'neatcoin'>;
declare const Nftmart: IChain<'nftmart'>;
declare const NodlePolkadot: IChain<'nodle-polkadot'>;
declare const Oak: IChain<'oak'>;
declare const Odyssey: IChain<'odyssey'>;
declare const Omnibtc: IChain<'omnibtc'>;
declare const OrigintrailParachain: IChain<'origintrail-parachain'>;
declare const Parallel: IChain<'parallel'>;
declare const Pendulum: IChain<'pendulum'>;
declare const Phala: IChain<'phala'>;
declare const Picasso: IChain<'picasso'>;
declare const Pichiu: IChain<'pichiu'>;
declare const PolkadexPolkadot: IChain<'polkadex-polkadot'>;
declare const PolkadexStandalone: IChain<'polkadex-standalone'>;
declare const Polkadot: IChain<'polkadot'>;
declare const PolkadotCollectives: IChain<'polkadot-collectives'>;
declare const Polkasmith: IChain<'polkasmith'>;
declare const Polymesh: IChain<'polymesh'>;
declare const Quartz: IChain<'quartz'>;
declare const Riochain: IChain<'riochain'>;
declare const Riodefi: IChain<'riodefi'>;
declare const RobonomicsKusama: IChain<'robonomics-kusama'>;
declare const Sakura: IChain<'sakura'>;
declare const ShadowKusama: IChain<'shadow-kusama'>;
declare const Sherpax: IChain<'sherpax'>;
declare const ShidenKusama: IChain<'shiden-kusama'>;
declare const Snow: IChain<'snow'>;
declare const SoraKsm: IChain<'sora-ksm'>;
declare const SoraSubstrate: IChain<'sora-substrate'>;
declare const Spanner: IChain<'spanner'>;
declare const Stafi: IChain<'stafi'>;
declare const Statemine: IChain<'statemine'>;
declare const Statemint: IChain<'statemint'>;
declare const Subdao: IChain<'subdao'>;
declare const SubgameKusama: IChain<'subgame-kusama'>;
declare const SubgamePolkadot: IChain<'subgame-polkadot'>;
declare const SubgameStandalone: IChain<'subgame-standalone'>;
declare const SubsocialX: IChain<'subsocial-x'>;
declare const Swapdex: IChain<'swapdex'>;
declare const Tanganika: IChain<'tanganika'>;
declare const Ternoa: IChain<'ternoa'>;
declare const ThebifrostMainnet: IChain<'thebifrost-mainnet'>;
declare const Tinker: IChain<'tinker'>;
declare const Trustbase: IChain<'trustbase'>;
declare const Turing: IChain<'turing'>;
declare const Uniarts: IChain<'uniarts'>;
declare const Unique: IChain<'unique'>;
declare const Unorthodox: IChain<'unorthodox'>;
declare const Westlake: IChain<'westlake'>;
declare const Xx: IChain<'xx'>;
declare const Zeitgeist: IChain<'zeitgeist'>;
declare const Zero: IChain<'zero'>;
declare const _3Dpass: IChain<'3-dpass'>;

declare const AllChains_Acala: typeof Acala;
declare const AllChains_Ajuna: typeof Ajuna;
declare const AllChains_Aleph: typeof Aleph;
declare const AllChains_Altair: typeof Altair;
declare const AllChains_Amplitude: typeof Amplitude;
declare const AllChains_AresOdyssey: typeof AresOdyssey;
declare const AllChains_Astar: typeof Astar;
declare const AllChains_Automata: typeof Automata;
declare const AllChains_Aventus: typeof Aventus;
declare const AllChains_Bajun: typeof Bajun;
declare const AllChains_Basilisk: typeof Basilisk;
declare const AllChains_BifrostKusama: typeof BifrostKusama;
declare const AllChains_BifrostPolkadot: typeof BifrostPolkadot;
declare const AllChains_BitcountryPioneer: typeof BitcountryPioneer;
declare const AllChains_Bitgreen: typeof Bitgreen;
declare const AllChains_Bittensor: typeof Bittensor;
declare const AllChains_Calamari: typeof Calamari;
declare const AllChains_CentrifugePolkadot: typeof CentrifugePolkadot;
declare const AllChains_Chainx: typeof Chainx;
declare const AllChains_Clover: typeof Clover;
declare const AllChains_Coinversation: typeof Coinversation;
declare const AllChains_CompetitorsClub: typeof CompetitorsClub;
declare const AllChains_ComposableFinance: typeof ComposableFinance;
declare const AllChains_CrabKusama: typeof CrabKusama;
declare const AllChains_CrabStandalone: typeof CrabStandalone;
declare const AllChains_Creditcoin: typeof Creditcoin;
declare const AllChains_CrownSterling: typeof CrownSterling;
declare const AllChains_Crust: typeof Crust;
declare const AllChains_CrustParachain: typeof CrustParachain;
declare const AllChains_Custom: typeof Custom;
declare const AllChains_DarwiniaPolkadot: typeof DarwiniaPolkadot;
declare const AllChains_DarwiniaPolkadot2: typeof DarwiniaPolkadot2;
declare const AllChains_DarwiniaStandalone: typeof DarwiniaStandalone;
declare const AllChains_Debio: typeof Debio;
declare const AllChains_DockPosMainnet: typeof DockPosMainnet;
declare const AllChains_Dorafactory: typeof Dorafactory;
declare const AllChains_Edgeware: typeof Edgeware;
declare const AllChains_EfinityPolkadot: typeof EfinityPolkadot;
declare const AllChains_EfinityStandalone: typeof EfinityStandalone;
declare const AllChains_Encointer: typeof Encointer;
declare const AllChains_EquilibriumPolkadot: typeof EquilibriumPolkadot;
declare const AllChains_Frequency: typeof Frequency;
declare const AllChains_Geminis: typeof Geminis;
declare const AllChains_GenshiroKusama: typeof GenshiroKusama;
declare const AllChains_Gm: typeof Gm;
declare const AllChains_Hanonycash: typeof Hanonycash;
declare const AllChains_Hashed: typeof Hashed;
declare const AllChains_HeikoKusama: typeof HeikoKusama;
declare const AllChains_Hydra: typeof Hydra;
declare const AllChains_Imbue: typeof Imbue;
declare const AllChains_IntegriteeKusama: typeof IntegriteeKusama;
declare const AllChains_IntegriteePolkadot: typeof IntegriteePolkadot;
declare const AllChains_Interlay: typeof Interlay;
declare const AllChains_Ipci: typeof Ipci;
declare const AllChains_Joystream: typeof Joystream;
declare const AllChains_Kabocha: typeof Kabocha;
declare const AllChains_Kapex: typeof Kapex;
declare const AllChains_Karura: typeof Karura;
declare const AllChains_Khala: typeof Khala;
declare const AllChains_Kico: typeof Kico;
declare const AllChains_KiltSpiritnet: typeof KiltSpiritnet;
declare const AllChains_Kintsugi: typeof Kintsugi;
declare const AllChains_Kpron: typeof Kpron;
declare const AllChains_Kulupu: typeof Kulupu;
declare const AllChains_Kusama: typeof Kusama;
declare const AllChains_KusamaBridgeHub: typeof KusamaBridgeHub;
declare const AllChains_Kusari: typeof Kusari;
declare const AllChains_Kylin: typeof Kylin;
declare const AllChains_Listen: typeof Listen;
declare const AllChains_Litentry: typeof Litentry;
declare const AllChains_Litmus: typeof Litmus;
declare const AllChains_Logion: typeof Logion;
declare const AllChains_LoomNetwork: typeof LoomNetwork;
declare const AllChains_Luhn: typeof Luhn;
declare const AllChains_Mangata: typeof Mangata;
declare const AllChains_Manta: typeof Manta;
declare const AllChains_Mars: typeof Mars;
declare const AllChains_Mathchain: typeof Mathchain;
declare const AllChains_Minix: typeof Minix;
declare const AllChains_Moonbeam: typeof Moonbeam;
declare const AllChains_Moonriver: typeof Moonriver;
declare const AllChains_Myriad: typeof Myriad;
declare const AllChains_Neatcoin: typeof Neatcoin;
declare const AllChains_Nftmart: typeof Nftmart;
declare const AllChains_NodlePolkadot: typeof NodlePolkadot;
declare const AllChains_Oak: typeof Oak;
declare const AllChains_Odyssey: typeof Odyssey;
declare const AllChains_Omnibtc: typeof Omnibtc;
declare const AllChains_OrigintrailParachain: typeof OrigintrailParachain;
declare const AllChains_Parallel: typeof Parallel;
declare const AllChains_Pendulum: typeof Pendulum;
declare const AllChains_Phala: typeof Phala;
declare const AllChains_Picasso: typeof Picasso;
declare const AllChains_Pichiu: typeof Pichiu;
declare const AllChains_PolkadexPolkadot: typeof PolkadexPolkadot;
declare const AllChains_PolkadexStandalone: typeof PolkadexStandalone;
declare const AllChains_Polkadot: typeof Polkadot;
declare const AllChains_PolkadotCollectives: typeof PolkadotCollectives;
declare const AllChains_Polkasmith: typeof Polkasmith;
declare const AllChains_Polymesh: typeof Polymesh;
declare const AllChains_Quartz: typeof Quartz;
declare const AllChains_Riochain: typeof Riochain;
declare const AllChains_Riodefi: typeof Riodefi;
declare const AllChains_RobonomicsKusama: typeof RobonomicsKusama;
declare const AllChains_Sakura: typeof Sakura;
declare const AllChains_ShadowKusama: typeof ShadowKusama;
declare const AllChains_Sherpax: typeof Sherpax;
declare const AllChains_ShidenKusama: typeof ShidenKusama;
declare const AllChains_Snow: typeof Snow;
declare const AllChains_SoraKsm: typeof SoraKsm;
declare const AllChains_SoraSubstrate: typeof SoraSubstrate;
declare const AllChains_Spanner: typeof Spanner;
declare const AllChains_Stafi: typeof Stafi;
declare const AllChains_Statemine: typeof Statemine;
declare const AllChains_Statemint: typeof Statemint;
declare const AllChains_Subdao: typeof Subdao;
declare const AllChains_SubgameKusama: typeof SubgameKusama;
declare const AllChains_SubgamePolkadot: typeof SubgamePolkadot;
declare const AllChains_SubgameStandalone: typeof SubgameStandalone;
declare const AllChains_SubsocialX: typeof SubsocialX;
declare const AllChains_Swapdex: typeof Swapdex;
declare const AllChains_Tanganika: typeof Tanganika;
declare const AllChains_Ternoa: typeof Ternoa;
declare const AllChains_ThebifrostMainnet: typeof ThebifrostMainnet;
declare const AllChains_Tinker: typeof Tinker;
declare const AllChains_Trustbase: typeof Trustbase;
declare const AllChains_Turing: typeof Turing;
declare const AllChains_Uniarts: typeof Uniarts;
declare const AllChains_Unique: typeof Unique;
declare const AllChains_Unorthodox: typeof Unorthodox;
declare const AllChains_Westlake: typeof Westlake;
declare const AllChains_Xx: typeof Xx;
declare const AllChains_Zeitgeist: typeof Zeitgeist;
declare const AllChains_Zero: typeof Zero;
declare const AllChains__3Dpass: typeof _3Dpass;
declare namespace AllChains {
  export {
    AllChains_Acala as Acala,
    AllChains_Ajuna as Ajuna,
    AllChains_Aleph as Aleph,
    AllChains_Altair as Altair,
    AllChains_Amplitude as Amplitude,
    AllChains_AresOdyssey as AresOdyssey,
    AllChains_Astar as Astar,
    AllChains_Automata as Automata,
    AllChains_Aventus as Aventus,
    AllChains_Bajun as Bajun,
    AllChains_Basilisk as Basilisk,
    AllChains_BifrostKusama as BifrostKusama,
    AllChains_BifrostPolkadot as BifrostPolkadot,
    AllChains_BitcountryPioneer as BitcountryPioneer,
    AllChains_Bitgreen as Bitgreen,
    AllChains_Bittensor as Bittensor,
    AllChains_Calamari as Calamari,
    AllChains_CentrifugePolkadot as CentrifugePolkadot,
    AllChains_Chainx as Chainx,
    AllChains_Clover as Clover,
    AllChains_Coinversation as Coinversation,
    AllChains_CompetitorsClub as CompetitorsClub,
    AllChains_ComposableFinance as ComposableFinance,
    AllChains_CrabKusama as CrabKusama,
    AllChains_CrabStandalone as CrabStandalone,
    AllChains_Creditcoin as Creditcoin,
    AllChains_CrownSterling as CrownSterling,
    AllChains_Crust as Crust,
    AllChains_CrustParachain as CrustParachain,
    AllChains_Custom as Custom,
    AllChains_DarwiniaPolkadot as DarwiniaPolkadot,
    AllChains_DarwiniaPolkadot2 as DarwiniaPolkadot2,
    AllChains_DarwiniaStandalone as DarwiniaStandalone,
    AllChains_Debio as Debio,
    AllChains_DockPosMainnet as DockPosMainnet,
    AllChains_Dorafactory as Dorafactory,
    AllChains_Edgeware as Edgeware,
    AllChains_EfinityPolkadot as EfinityPolkadot,
    AllChains_EfinityStandalone as EfinityStandalone,
    AllChains_Encointer as Encointer,
    AllChains_EquilibriumPolkadot as EquilibriumPolkadot,
    AllChains_Frequency as Frequency,
    AllChains_Geminis as Geminis,
    AllChains_GenshiroKusama as GenshiroKusama,
    AllChains_Gm as Gm,
    AllChains_Hanonycash as Hanonycash,
    AllChains_Hashed as Hashed,
    AllChains_HeikoKusama as HeikoKusama,
    AllChains_Hydra as Hydra,
    AllChains_Imbue as Imbue,
    AllChains_IntegriteeKusama as IntegriteeKusama,
    AllChains_IntegriteePolkadot as IntegriteePolkadot,
    AllChains_Interlay as Interlay,
    AllChains_Ipci as Ipci,
    AllChains_Joystream as Joystream,
    AllChains_Kabocha as Kabocha,
    AllChains_Kapex as Kapex,
    AllChains_Karura as Karura,
    AllChains_Khala as Khala,
    AllChains_Kico as Kico,
    AllChains_KiltSpiritnet as KiltSpiritnet,
    AllChains_Kintsugi as Kintsugi,
    AllChains_Kpron as Kpron,
    AllChains_Kulupu as Kulupu,
    AllChains_Kusama as Kusama,
    AllChains_KusamaBridgeHub as KusamaBridgeHub,
    AllChains_Kusari as Kusari,
    AllChains_Kylin as Kylin,
    AllChains_Listen as Listen,
    AllChains_Litentry as Litentry,
    AllChains_Litmus as Litmus,
    AllChains_Logion as Logion,
    AllChains_LoomNetwork as LoomNetwork,
    AllChains_Luhn as Luhn,
    AllChains_Mangata as Mangata,
    AllChains_Manta as Manta,
    AllChains_Mars as Mars,
    AllChains_Mathchain as Mathchain,
    AllChains_Minix as Minix,
    AllChains_Moonbeam as Moonbeam,
    AllChains_Moonriver as Moonriver,
    AllChains_Myriad as Myriad,
    AllChains_Neatcoin as Neatcoin,
    AllChains_Nftmart as Nftmart,
    AllChains_NodlePolkadot as NodlePolkadot,
    AllChains_Oak as Oak,
    AllChains_Odyssey as Odyssey,
    AllChains_Omnibtc as Omnibtc,
    AllChains_OrigintrailParachain as OrigintrailParachain,
    AllChains_Parallel as Parallel,
    AllChains_Pendulum as Pendulum,
    AllChains_Phala as Phala,
    AllChains_Picasso as Picasso,
    AllChains_Pichiu as Pichiu,
    AllChains_PolkadexPolkadot as PolkadexPolkadot,
    AllChains_PolkadexStandalone as PolkadexStandalone,
    AllChains_Polkadot as Polkadot,
    AllChains_PolkadotCollectives as PolkadotCollectives,
    AllChains_Polkasmith as Polkasmith,
    AllChains_Polymesh as Polymesh,
    AllChains_Quartz as Quartz,
    AllChains_Riochain as Riochain,
    AllChains_Riodefi as Riodefi,
    AllChains_RobonomicsKusama as RobonomicsKusama,
    AllChains_Sakura as Sakura,
    AllChains_ShadowKusama as ShadowKusama,
    AllChains_Sherpax as Sherpax,
    AllChains_ShidenKusama as ShidenKusama,
    AllChains_Snow as Snow,
    AllChains_SoraKsm as SoraKsm,
    AllChains_SoraSubstrate as SoraSubstrate,
    AllChains_Spanner as Spanner,
    AllChains_Stafi as Stafi,
    AllChains_Statemine as Statemine,
    AllChains_Statemint as Statemint,
    AllChains_Subdao as Subdao,
    AllChains_SubgameKusama as SubgameKusama,
    AllChains_SubgamePolkadot as SubgamePolkadot,
    AllChains_SubgameStandalone as SubgameStandalone,
    AllChains_SubsocialX as SubsocialX,
    AllChains_Swapdex as Swapdex,
    AllChains_Tanganika as Tanganika,
    AllChains_Ternoa as Ternoa,
    AllChains_ThebifrostMainnet as ThebifrostMainnet,
    AllChains_Tinker as Tinker,
    AllChains_Trustbase as Trustbase,
    AllChains_Turing as Turing,
    AllChains_Uniarts as Uniarts,
    AllChains_Unique as Unique,
    AllChains_Unorthodox as Unorthodox,
    AllChains_Westlake as Westlake,
    AllChains_Xx as Xx,
    AllChains_Zeitgeist as Zeitgeist,
    AllChains_Zero as Zero,
    AllChains__3Dpass as _3Dpass,
  };
}

declare const AjunaTestnet: IChain<'ajuna-testnet'>;
declare const AlephTestnet: IChain<'aleph-testnet'>;
declare const ArcticTestnetRococo: IChain<'arctic-testnet-rococo'>;
declare const ArcticTestnetStandalone: IChain<'arctic-testnet-standalone'>;
declare const AresGladiosTestnet: IChain<'ares-gladios-testnet'>;
declare const AutomataContextfreeTestnet: IChain<'automata-contextfree-testnet'>;
declare const BifrostTestnet: IChain<'bifrost-testnet'>;
declare const BitcountryTestnet: IChain<'bitcountry-testnet'>;
declare const BrainstormTestnet: IChain<'brainstorm-testnet'>;
declare const CessTestnet: IChain<'cess-testnet'>;
declare const ChainoliTestnet: IChain<'chainoli-testnet'>;
declare const CharcoalTestnet: IChain<'charcoal-testnet'>;
declare const CloverTestnet: IChain<'clover-testnet'>;
declare const CoinversationTestnet: IChain<'coinversation-testnet'>;
declare const CreditcoinTestnet: IChain<'creditcoin-testnet'>;
declare const CrustMaxwellTestnet: IChain<'crust-maxwell-testnet'>;
declare const DatahighwayTestnet: IChain<'datahighway-testnet'>;
declare const DebioTestnet: IChain<'debio-testnet'>;
declare const Development: IChain<'development'>;
declare const DockTestnet: IChain<'dock-testnet'>;
declare const DolphinTestnet: IChain<'dolphin-testnet'>;
declare const DotmogTestnet: IChain<'dotmog-testnet'>;
declare const EdgewareTestnet: IChain<'edgeware-testnet'>;
declare const EggnetTestnet: IChain<'eggnet-testnet'>;
declare const EncointerTestnetRococo: IChain<'encointer-testnet-rococo'>;
declare const EncointerTestnetStandalone: IChain<'encointer-testnet-standalone'>;
declare const EquilibriumTestnet: IChain<'equilibrium-testnet'>;
declare const FantourTestnet: IChain<'fantour-testnet'>;
declare const FerrumTestnet: IChain<'ferrum-testnet'>;
declare const GalitalTestnet: IChain<'galital-testnet'>;
declare const GaloisTestnet: IChain<'galois-testnet'>;
declare const GamepowerTestnet: IChain<'gamepower-testnet'>;
declare const GeekTestnet: IChain<'geek-testnet'>;
declare const GuildTestnet: IChain<'guild-testnet'>;
declare const HalongbayTestnet: IChain<'halongbay-testnet'>;
declare const HelixstreetTestnet: IChain<'helixstreet-testnet'>;
declare const IntegriteeTestnet: IChain<'integritee-testnet'>;
declare const InterlayTestnetStandalone: IChain<'interlay-testnet-standalone'>;
declare const InterlayTestnetWestend: IChain<'interlay-testnet-westend'>;
declare const IpseTestnet: IChain<'ipse-testnet'>;
declare const JazTestnet: IChain<'jaz-testnet'>;
declare const JoystreamTestnet: IChain<'joystream-testnet'>;
declare const JupiterTestnet: IChain<'jupiter-testnet'>;
declare const KaruraTestnet: IChain<'karura-testnet'>;
declare const KhalaTestnet: IChain<'khala-testnet'>;
declare const KiltTestnetStandalone: IChain<'kilt-testnet-standalone'>;
declare const KiltTestnetStandalone2: IChain<'kilt-testnet-standalone-2'>;
declare const KiltTestnetWestend: IChain<'kilt-testnet-westend'>;
declare const KintsugiTestnet: IChain<'kintsugi-testnet'>;
declare const KlugdossierTestnet: IChain<'klugdossier-testnet'>;
declare const KylinTestnet: IChain<'kylin-testnet'>;
declare const LaminarTestnet: IChain<'laminar-testnet'>;
declare const LitentryTestnet: IChain<'litentry-testnet'>;
declare const LogionTestnetStandalone: IChain<'logion-testnet-standalone'>;
declare const LogionTestnetStandalone2: IChain<'logion-testnet-standalone-2'>;
declare const MandalaTestnet: IChain<'mandala-testnet'>;
declare const MantaTestnet: IChain<'manta-testnet'>;
declare const MinixTestnet: IChain<'minix-testnet'>;
declare const MoonbaseAlphaTestnet: IChain<'moonbase-alpha-testnet'>;
declare const MoonshadowTestnet: IChain<'moonshadow-testnet'>;
declare const MybankTestnet: IChain<'mybank-testnet'>;
declare const MyriadTestnet: IChain<'myriad-testnet'>;
declare const NftmartTestnet: IChain<'nftmart-testnet'>;
declare const NodleTestnet: IChain<'nodle-testnet'>;
declare const OpalTestnet: IChain<'opal-testnet'>;
declare const OpportunityTestnet: IChain<'opportunity-testnet'>;
declare const PangolinTestnet: IChain<'pangolin-testnet'>;
declare const PangoroTestnetStandalone: IChain<'pangoro-testnet-standalone'>;
declare const PangoroTestnetWestend: IChain<'pangoro-testnet-westend'>;
declare const PhalaTestnet: IChain<'phala-testnet'>;
declare const PhoenixTestnet: IChain<'phoenix-testnet'>;
declare const PichiuTestnet: IChain<'pichiu-testnet'>;
declare const PolkadexTestnet: IChain<'polkadex-testnet'>;
declare const PolymeshTestnet: IChain<'polymesh-testnet'>;
declare const PontemTestnet: IChain<'pontem-testnet'>;
declare const PrismTestnet: IChain<'prism-testnet'>;
declare const RealisTestnet: IChain<'realis-testnet'>;
declare const RiochainTestnet: IChain<'riochain-testnet'>;
declare const RobonomicsTestnet: IChain<'robonomics-testnet'>;
declare const RocfinityTestnet: IChain<'rocfinity-testnet'>;
declare const RococoAcurastTestnet: IChain<'rococo-acurast-testnet'>;
declare const RococoAmplitudeTestnet: IChain<'rococo-amplitude-testnet'>;
declare const RococoAventusTestnet: IChain<'rococo-aventus-testnet'>;
declare const RococoBajunTestnet: IChain<'rococo-bajun-testnet'>;
declare const RococoBasiliskTestnet: IChain<'rococo-basilisk-testnet'>;
declare const RococoBifrostTestnet: IChain<'rococo-bifrost-testnet'>;
declare const RococoBitgreenTestnet: IChain<'rococo-bitgreen-testnet'>;
declare const RococoBridgehubTestnet: IChain<'rococo-bridgehub-testnet'>;
declare const RococoCatalystTestnet: IChain<'rococo-catalyst-testnet'>;
declare const RococoConftiTestnet: IChain<'rococo-confti-testnet'>;
declare const RococoContractsTestnet: IChain<'rococo-contracts-testnet'>;
declare const RococoCrustTestnet: IChain<'rococo-crust-testnet'>;
declare const RococoDaliTestnet: IChain<'rococo-dali-testnet'>;
declare const RococoDolphinTestnet: IChain<'rococo-dolphin-testnet'>;
declare const RococoEthosTestnet: IChain<'rococo-ethos-testnet'>;
declare const RococoFrequencyTestnet: IChain<'rococo-frequency-testnet'>;
declare const RococoGenshiroTestnet: IChain<'rococo-genshiro-testnet'>;
declare const RococoHydraDxTestnet: IChain<'rococo-hydra-dx-testnet'>;
declare const RococoImbueTestnet: IChain<'rococo-imbue-testnet'>;
declare const RococoIntegriteeTestnet: IChain<'rococo-integritee-testnet'>;
declare const RococoKabochaTestnet: IChain<'rococo-kabocha-testnet'>;
declare const RococoKiltTestnet: IChain<'rococo-kilt-testnet'>;
declare const RococoLitentryTestnet: IChain<'rococo-litentry-testnet'>;
declare const RococoMangataTestnet: IChain<'rococo-mangata-testnet'>;
declare const RococoMd5Testnet: IChain<'rococo-md-5-testnet'>;
declare const RococoMoonsamaTestnet: IChain<'rococo-moonsama-testnet'>;
declare const RococoNodleTestnet: IChain<'rococo-nodle-testnet'>;
declare const RococoOriginTrailParachainTestnet: IChain<'rococo-origin-trail-parachain-testnet'>;
declare const RococoPangolinTestnet: IChain<'rococo-pangolin-testnet'>;
declare const RococoSoraTestnet: IChain<'rococo-sora-testnet'>;
declare const RococoSpreehafenTestnet: IChain<'rococo-spreehafen-testnet'>;
declare const RococoStatemintTestnet: IChain<'rococo-statemint-testnet'>;
declare const RococoSubsocialTestnet: IChain<'rococo-subsocial-testnet'>;
declare const RococoSubzeroTestnet: IChain<'rococo-subzero-testnet'>;
declare const RococoTestnet: IChain<'rococo-testnet'>;
declare const RococoTinkernetTestnet: IChain<'rococo-tinkernet-testnet'>;
declare const RococoTuringTestnet: IChain<'rococo-turing-testnet'>;
declare const RococoUnitNetworkTestnet: IChain<'rococo-unit-network-testnet'>;
declare const RococoVirtoTestnet: IChain<'rococo-virto-testnet'>;
declare const RococoWatrTestnet: IChain<'rococo-watr-testnet'>;
declare const RococoZeitgeistTestnet: IChain<'rococo-zeitgeist-testnet'>;
declare const SherpaxTestnet: IChain<'sherpax-testnet'>;
declare const ShibuyaTestnet: IChain<'shibuya-testnet'>;
declare const SkyekiwiTestnet: IChain<'skyekiwi-testnet'>;
declare const SnowbridgeTestnet: IChain<'snowbridge-testnet'>;
declare const SoonsocialTestnet: IChain<'soonsocial-testnet'>;
declare const SoraSubstrateTestnet: IChain<'sora-substrate-testnet'>;
declare const StagexTestnet: IChain<'stagex-testnet'>;
declare const SubdaoTestnet: IChain<'subdao-testnet'>;
declare const SubgameTestnet: IChain<'subgame-testnet'>;
declare const SubspaceFarmnetTestnet: IChain<'subspace-farmnet-testnet'>;
declare const SubspaceGemini1Testnet: IChain<'subspace-gemini-1-testnet'>;
declare const SubspaceGemini2ATestnet: IChain<'subspace-gemini-2-a-testnet'>;
declare const SubspaceTestnet: IChain<'subspace-testnet'>;
declare const SubstrateTestnet: IChain<'substrate-testnet'>;
declare const SumiStagingTestnet: IChain<'sumi-staging-testnet'>;
declare const T0RnTestnet: IChain<'t-0-rn-testnet'>;
declare const TernoaAlphanetTestnet: IChain<'ternoa-alphanet-testnet'>;
declare const TernoaTestnet: IChain<'ternoa-testnet'>;
declare const ThebifrostTestnet: IChain<'thebifrost-testnet'>;
declare const UniartsTestnet: IChain<'uniarts-testnet'>;
declare const UniqueTestnet: IChain<'unique-testnet'>;
declare const UnitvTestnet: IChain<'unitv-testnet'>;
declare const VaraTestnet: IChain<'vara-testnet'>;
declare const VodkaTestnet: IChain<'vodka-testnet'>;
declare const Web3GamesTestnet: IChain<'web-3-games-testnet'>;
declare const WestendBridgeHubTestnet: IChain<'westend-bridge-hub-testnet'>;
declare const WestendCollectivesTestnet: IChain<'westend-collectives-testnet'>;
declare const WestendPichiuTestnet: IChain<'westend-pichiu-testnet'>;
declare const WestendStandardTestnet: IChain<'westend-standard-testnet'>;
declare const WestendTestnet: IChain<'westend-testnet'>;
declare const WestmintTestnet: IChain<'westmint-testnet'>;
declare const WhalaTestnet: IChain<'whala-testnet'>;
declare const ZCloakTestnet: IChain<'z-cloak-testnet'>;
declare const ZeitgeistTestnet: IChain<'zeitgeist-testnet'>;
declare const ZeroTestnet: IChain<'zero-testnet'>;
declare const _3DpassTestnet: IChain<'3-dpass-testnet'>;

declare const AllTestnets_AjunaTestnet: typeof AjunaTestnet;
declare const AllTestnets_AlephTestnet: typeof AlephTestnet;
declare const AllTestnets_ArcticTestnetRococo: typeof ArcticTestnetRococo;
declare const AllTestnets_ArcticTestnetStandalone: typeof ArcticTestnetStandalone;
declare const AllTestnets_AresGladiosTestnet: typeof AresGladiosTestnet;
declare const AllTestnets_AutomataContextfreeTestnet: typeof AutomataContextfreeTestnet;
declare const AllTestnets_BifrostTestnet: typeof BifrostTestnet;
declare const AllTestnets_BitcountryTestnet: typeof BitcountryTestnet;
declare const AllTestnets_BrainstormTestnet: typeof BrainstormTestnet;
declare const AllTestnets_CessTestnet: typeof CessTestnet;
declare const AllTestnets_ChainoliTestnet: typeof ChainoliTestnet;
declare const AllTestnets_CharcoalTestnet: typeof CharcoalTestnet;
declare const AllTestnets_CloverTestnet: typeof CloverTestnet;
declare const AllTestnets_CoinversationTestnet: typeof CoinversationTestnet;
declare const AllTestnets_CreditcoinTestnet: typeof CreditcoinTestnet;
declare const AllTestnets_CrustMaxwellTestnet: typeof CrustMaxwellTestnet;
declare const AllTestnets_DatahighwayTestnet: typeof DatahighwayTestnet;
declare const AllTestnets_DebioTestnet: typeof DebioTestnet;
declare const AllTestnets_Development: typeof Development;
declare const AllTestnets_DockTestnet: typeof DockTestnet;
declare const AllTestnets_DolphinTestnet: typeof DolphinTestnet;
declare const AllTestnets_DotmogTestnet: typeof DotmogTestnet;
declare const AllTestnets_EdgewareTestnet: typeof EdgewareTestnet;
declare const AllTestnets_EggnetTestnet: typeof EggnetTestnet;
declare const AllTestnets_EncointerTestnetRococo: typeof EncointerTestnetRococo;
declare const AllTestnets_EncointerTestnetStandalone: typeof EncointerTestnetStandalone;
declare const AllTestnets_EquilibriumTestnet: typeof EquilibriumTestnet;
declare const AllTestnets_FantourTestnet: typeof FantourTestnet;
declare const AllTestnets_FerrumTestnet: typeof FerrumTestnet;
declare const AllTestnets_GalitalTestnet: typeof GalitalTestnet;
declare const AllTestnets_GaloisTestnet: typeof GaloisTestnet;
declare const AllTestnets_GamepowerTestnet: typeof GamepowerTestnet;
declare const AllTestnets_GeekTestnet: typeof GeekTestnet;
declare const AllTestnets_GuildTestnet: typeof GuildTestnet;
declare const AllTestnets_HalongbayTestnet: typeof HalongbayTestnet;
declare const AllTestnets_HelixstreetTestnet: typeof HelixstreetTestnet;
declare const AllTestnets_IntegriteeTestnet: typeof IntegriteeTestnet;
declare const AllTestnets_InterlayTestnetStandalone: typeof InterlayTestnetStandalone;
declare const AllTestnets_InterlayTestnetWestend: typeof InterlayTestnetWestend;
declare const AllTestnets_IpseTestnet: typeof IpseTestnet;
declare const AllTestnets_JazTestnet: typeof JazTestnet;
declare const AllTestnets_JoystreamTestnet: typeof JoystreamTestnet;
declare const AllTestnets_JupiterTestnet: typeof JupiterTestnet;
declare const AllTestnets_KaruraTestnet: typeof KaruraTestnet;
declare const AllTestnets_KhalaTestnet: typeof KhalaTestnet;
declare const AllTestnets_KiltTestnetStandalone: typeof KiltTestnetStandalone;
declare const AllTestnets_KiltTestnetStandalone2: typeof KiltTestnetStandalone2;
declare const AllTestnets_KiltTestnetWestend: typeof KiltTestnetWestend;
declare const AllTestnets_KintsugiTestnet: typeof KintsugiTestnet;
declare const AllTestnets_KlugdossierTestnet: typeof KlugdossierTestnet;
declare const AllTestnets_KylinTestnet: typeof KylinTestnet;
declare const AllTestnets_LaminarTestnet: typeof LaminarTestnet;
declare const AllTestnets_LitentryTestnet: typeof LitentryTestnet;
declare const AllTestnets_LogionTestnetStandalone: typeof LogionTestnetStandalone;
declare const AllTestnets_LogionTestnetStandalone2: typeof LogionTestnetStandalone2;
declare const AllTestnets_MandalaTestnet: typeof MandalaTestnet;
declare const AllTestnets_MantaTestnet: typeof MantaTestnet;
declare const AllTestnets_MinixTestnet: typeof MinixTestnet;
declare const AllTestnets_MoonbaseAlphaTestnet: typeof MoonbaseAlphaTestnet;
declare const AllTestnets_MoonshadowTestnet: typeof MoonshadowTestnet;
declare const AllTestnets_MybankTestnet: typeof MybankTestnet;
declare const AllTestnets_MyriadTestnet: typeof MyriadTestnet;
declare const AllTestnets_NftmartTestnet: typeof NftmartTestnet;
declare const AllTestnets_NodleTestnet: typeof NodleTestnet;
declare const AllTestnets_OpalTestnet: typeof OpalTestnet;
declare const AllTestnets_OpportunityTestnet: typeof OpportunityTestnet;
declare const AllTestnets_PangolinTestnet: typeof PangolinTestnet;
declare const AllTestnets_PangoroTestnetStandalone: typeof PangoroTestnetStandalone;
declare const AllTestnets_PangoroTestnetWestend: typeof PangoroTestnetWestend;
declare const AllTestnets_PhalaTestnet: typeof PhalaTestnet;
declare const AllTestnets_PhoenixTestnet: typeof PhoenixTestnet;
declare const AllTestnets_PichiuTestnet: typeof PichiuTestnet;
declare const AllTestnets_PolkadexTestnet: typeof PolkadexTestnet;
declare const AllTestnets_PolymeshTestnet: typeof PolymeshTestnet;
declare const AllTestnets_PontemTestnet: typeof PontemTestnet;
declare const AllTestnets_PrismTestnet: typeof PrismTestnet;
declare const AllTestnets_RealisTestnet: typeof RealisTestnet;
declare const AllTestnets_RiochainTestnet: typeof RiochainTestnet;
declare const AllTestnets_RobonomicsTestnet: typeof RobonomicsTestnet;
declare const AllTestnets_RocfinityTestnet: typeof RocfinityTestnet;
declare const AllTestnets_RococoAcurastTestnet: typeof RococoAcurastTestnet;
declare const AllTestnets_RococoAmplitudeTestnet: typeof RococoAmplitudeTestnet;
declare const AllTestnets_RococoAventusTestnet: typeof RococoAventusTestnet;
declare const AllTestnets_RococoBajunTestnet: typeof RococoBajunTestnet;
declare const AllTestnets_RococoBasiliskTestnet: typeof RococoBasiliskTestnet;
declare const AllTestnets_RococoBifrostTestnet: typeof RococoBifrostTestnet;
declare const AllTestnets_RococoBitgreenTestnet: typeof RococoBitgreenTestnet;
declare const AllTestnets_RococoBridgehubTestnet: typeof RococoBridgehubTestnet;
declare const AllTestnets_RococoCatalystTestnet: typeof RococoCatalystTestnet;
declare const AllTestnets_RococoConftiTestnet: typeof RococoConftiTestnet;
declare const AllTestnets_RococoContractsTestnet: typeof RococoContractsTestnet;
declare const AllTestnets_RococoCrustTestnet: typeof RococoCrustTestnet;
declare const AllTestnets_RococoDaliTestnet: typeof RococoDaliTestnet;
declare const AllTestnets_RococoDolphinTestnet: typeof RococoDolphinTestnet;
declare const AllTestnets_RococoEthosTestnet: typeof RococoEthosTestnet;
declare const AllTestnets_RococoFrequencyTestnet: typeof RococoFrequencyTestnet;
declare const AllTestnets_RococoGenshiroTestnet: typeof RococoGenshiroTestnet;
declare const AllTestnets_RococoHydraDxTestnet: typeof RococoHydraDxTestnet;
declare const AllTestnets_RococoImbueTestnet: typeof RococoImbueTestnet;
declare const AllTestnets_RococoIntegriteeTestnet: typeof RococoIntegriteeTestnet;
declare const AllTestnets_RococoKabochaTestnet: typeof RococoKabochaTestnet;
declare const AllTestnets_RococoKiltTestnet: typeof RococoKiltTestnet;
declare const AllTestnets_RococoLitentryTestnet: typeof RococoLitentryTestnet;
declare const AllTestnets_RococoMangataTestnet: typeof RococoMangataTestnet;
declare const AllTestnets_RococoMd5Testnet: typeof RococoMd5Testnet;
declare const AllTestnets_RococoMoonsamaTestnet: typeof RococoMoonsamaTestnet;
declare const AllTestnets_RococoNodleTestnet: typeof RococoNodleTestnet;
declare const AllTestnets_RococoOriginTrailParachainTestnet: typeof RococoOriginTrailParachainTestnet;
declare const AllTestnets_RococoPangolinTestnet: typeof RococoPangolinTestnet;
declare const AllTestnets_RococoSoraTestnet: typeof RococoSoraTestnet;
declare const AllTestnets_RococoSpreehafenTestnet: typeof RococoSpreehafenTestnet;
declare const AllTestnets_RococoStatemintTestnet: typeof RococoStatemintTestnet;
declare const AllTestnets_RococoSubsocialTestnet: typeof RococoSubsocialTestnet;
declare const AllTestnets_RococoSubzeroTestnet: typeof RococoSubzeroTestnet;
declare const AllTestnets_RococoTestnet: typeof RococoTestnet;
declare const AllTestnets_RococoTinkernetTestnet: typeof RococoTinkernetTestnet;
declare const AllTestnets_RococoTuringTestnet: typeof RococoTuringTestnet;
declare const AllTestnets_RococoUnitNetworkTestnet: typeof RococoUnitNetworkTestnet;
declare const AllTestnets_RococoVirtoTestnet: typeof RococoVirtoTestnet;
declare const AllTestnets_RococoWatrTestnet: typeof RococoWatrTestnet;
declare const AllTestnets_RococoZeitgeistTestnet: typeof RococoZeitgeistTestnet;
declare const AllTestnets_SherpaxTestnet: typeof SherpaxTestnet;
declare const AllTestnets_ShibuyaTestnet: typeof ShibuyaTestnet;
declare const AllTestnets_SkyekiwiTestnet: typeof SkyekiwiTestnet;
declare const AllTestnets_SnowbridgeTestnet: typeof SnowbridgeTestnet;
declare const AllTestnets_SoonsocialTestnet: typeof SoonsocialTestnet;
declare const AllTestnets_SoraSubstrateTestnet: typeof SoraSubstrateTestnet;
declare const AllTestnets_StagexTestnet: typeof StagexTestnet;
declare const AllTestnets_SubdaoTestnet: typeof SubdaoTestnet;
declare const AllTestnets_SubgameTestnet: typeof SubgameTestnet;
declare const AllTestnets_SubspaceFarmnetTestnet: typeof SubspaceFarmnetTestnet;
declare const AllTestnets_SubspaceGemini1Testnet: typeof SubspaceGemini1Testnet;
declare const AllTestnets_SubspaceGemini2ATestnet: typeof SubspaceGemini2ATestnet;
declare const AllTestnets_SubspaceTestnet: typeof SubspaceTestnet;
declare const AllTestnets_SubstrateTestnet: typeof SubstrateTestnet;
declare const AllTestnets_SumiStagingTestnet: typeof SumiStagingTestnet;
declare const AllTestnets_T0RnTestnet: typeof T0RnTestnet;
declare const AllTestnets_TernoaAlphanetTestnet: typeof TernoaAlphanetTestnet;
declare const AllTestnets_TernoaTestnet: typeof TernoaTestnet;
declare const AllTestnets_ThebifrostTestnet: typeof ThebifrostTestnet;
declare const AllTestnets_UniartsTestnet: typeof UniartsTestnet;
declare const AllTestnets_UniqueTestnet: typeof UniqueTestnet;
declare const AllTestnets_UnitvTestnet: typeof UnitvTestnet;
declare const AllTestnets_VaraTestnet: typeof VaraTestnet;
declare const AllTestnets_VodkaTestnet: typeof VodkaTestnet;
declare const AllTestnets_Web3GamesTestnet: typeof Web3GamesTestnet;
declare const AllTestnets_WestendBridgeHubTestnet: typeof WestendBridgeHubTestnet;
declare const AllTestnets_WestendCollectivesTestnet: typeof WestendCollectivesTestnet;
declare const AllTestnets_WestendPichiuTestnet: typeof WestendPichiuTestnet;
declare const AllTestnets_WestendStandardTestnet: typeof WestendStandardTestnet;
declare const AllTestnets_WestendTestnet: typeof WestendTestnet;
declare const AllTestnets_WestmintTestnet: typeof WestmintTestnet;
declare const AllTestnets_WhalaTestnet: typeof WhalaTestnet;
declare const AllTestnets_ZCloakTestnet: typeof ZCloakTestnet;
declare const AllTestnets_ZeitgeistTestnet: typeof ZeitgeistTestnet;
declare const AllTestnets_ZeroTestnet: typeof ZeroTestnet;
declare const AllTestnets__3DpassTestnet: typeof _3DpassTestnet;
declare namespace AllTestnets {
  export {
    AllTestnets_AjunaTestnet as AjunaTestnet,
    AllTestnets_AlephTestnet as AlephTestnet,
    AllTestnets_ArcticTestnetRococo as ArcticTestnetRococo,
    AllTestnets_ArcticTestnetStandalone as ArcticTestnetStandalone,
    AllTestnets_AresGladiosTestnet as AresGladiosTestnet,
    AllTestnets_AutomataContextfreeTestnet as AutomataContextfreeTestnet,
    AllTestnets_BifrostTestnet as BifrostTestnet,
    AllTestnets_BitcountryTestnet as BitcountryTestnet,
    AllTestnets_BrainstormTestnet as BrainstormTestnet,
    AllTestnets_CessTestnet as CessTestnet,
    AllTestnets_ChainoliTestnet as ChainoliTestnet,
    AllTestnets_CharcoalTestnet as CharcoalTestnet,
    AllTestnets_CloverTestnet as CloverTestnet,
    AllTestnets_CoinversationTestnet as CoinversationTestnet,
    AllTestnets_CreditcoinTestnet as CreditcoinTestnet,
    AllTestnets_CrustMaxwellTestnet as CrustMaxwellTestnet,
    AllTestnets_DatahighwayTestnet as DatahighwayTestnet,
    AllTestnets_DebioTestnet as DebioTestnet,
    AllTestnets_Development as Development,
    AllTestnets_DockTestnet as DockTestnet,
    AllTestnets_DolphinTestnet as DolphinTestnet,
    AllTestnets_DotmogTestnet as DotmogTestnet,
    AllTestnets_EdgewareTestnet as EdgewareTestnet,
    AllTestnets_EggnetTestnet as EggnetTestnet,
    AllTestnets_EncointerTestnetRococo as EncointerTestnetRococo,
    AllTestnets_EncointerTestnetStandalone as EncointerTestnetStandalone,
    AllTestnets_EquilibriumTestnet as EquilibriumTestnet,
    AllTestnets_FantourTestnet as FantourTestnet,
    AllTestnets_FerrumTestnet as FerrumTestnet,
    AllTestnets_GalitalTestnet as GalitalTestnet,
    AllTestnets_GaloisTestnet as GaloisTestnet,
    AllTestnets_GamepowerTestnet as GamepowerTestnet,
    AllTestnets_GeekTestnet as GeekTestnet,
    AllTestnets_GuildTestnet as GuildTestnet,
    AllTestnets_HalongbayTestnet as HalongbayTestnet,
    AllTestnets_HelixstreetTestnet as HelixstreetTestnet,
    AllTestnets_IntegriteeTestnet as IntegriteeTestnet,
    AllTestnets_InterlayTestnetStandalone as InterlayTestnetStandalone,
    AllTestnets_InterlayTestnetWestend as InterlayTestnetWestend,
    AllTestnets_IpseTestnet as IpseTestnet,
    AllTestnets_JazTestnet as JazTestnet,
    AllTestnets_JoystreamTestnet as JoystreamTestnet,
    AllTestnets_JupiterTestnet as JupiterTestnet,
    AllTestnets_KaruraTestnet as KaruraTestnet,
    AllTestnets_KhalaTestnet as KhalaTestnet,
    AllTestnets_KiltTestnetStandalone as KiltTestnetStandalone,
    AllTestnets_KiltTestnetStandalone2 as KiltTestnetStandalone2,
    AllTestnets_KiltTestnetWestend as KiltTestnetWestend,
    AllTestnets_KintsugiTestnet as KintsugiTestnet,
    AllTestnets_KlugdossierTestnet as KlugdossierTestnet,
    AllTestnets_KylinTestnet as KylinTestnet,
    AllTestnets_LaminarTestnet as LaminarTestnet,
    AllTestnets_LitentryTestnet as LitentryTestnet,
    AllTestnets_LogionTestnetStandalone as LogionTestnetStandalone,
    AllTestnets_LogionTestnetStandalone2 as LogionTestnetStandalone2,
    AllTestnets_MandalaTestnet as MandalaTestnet,
    AllTestnets_MantaTestnet as MantaTestnet,
    AllTestnets_MinixTestnet as MinixTestnet,
    AllTestnets_MoonbaseAlphaTestnet as MoonbaseAlphaTestnet,
    AllTestnets_MoonshadowTestnet as MoonshadowTestnet,
    AllTestnets_MybankTestnet as MybankTestnet,
    AllTestnets_MyriadTestnet as MyriadTestnet,
    AllTestnets_NftmartTestnet as NftmartTestnet,
    AllTestnets_NodleTestnet as NodleTestnet,
    AllTestnets_OpalTestnet as OpalTestnet,
    AllTestnets_OpportunityTestnet as OpportunityTestnet,
    AllTestnets_PangolinTestnet as PangolinTestnet,
    AllTestnets_PangoroTestnetStandalone as PangoroTestnetStandalone,
    AllTestnets_PangoroTestnetWestend as PangoroTestnetWestend,
    AllTestnets_PhalaTestnet as PhalaTestnet,
    AllTestnets_PhoenixTestnet as PhoenixTestnet,
    AllTestnets_PichiuTestnet as PichiuTestnet,
    AllTestnets_PolkadexTestnet as PolkadexTestnet,
    AllTestnets_PolymeshTestnet as PolymeshTestnet,
    AllTestnets_PontemTestnet as PontemTestnet,
    AllTestnets_PrismTestnet as PrismTestnet,
    AllTestnets_RealisTestnet as RealisTestnet,
    AllTestnets_RiochainTestnet as RiochainTestnet,
    AllTestnets_RobonomicsTestnet as RobonomicsTestnet,
    AllTestnets_RocfinityTestnet as RocfinityTestnet,
    AllTestnets_RococoAcurastTestnet as RococoAcurastTestnet,
    AllTestnets_RococoAmplitudeTestnet as RococoAmplitudeTestnet,
    AllTestnets_RococoAventusTestnet as RococoAventusTestnet,
    AllTestnets_RococoBajunTestnet as RococoBajunTestnet,
    AllTestnets_RococoBasiliskTestnet as RococoBasiliskTestnet,
    AllTestnets_RococoBifrostTestnet as RococoBifrostTestnet,
    AllTestnets_RococoBitgreenTestnet as RococoBitgreenTestnet,
    AllTestnets_RococoBridgehubTestnet as RococoBridgehubTestnet,
    AllTestnets_RococoCatalystTestnet as RococoCatalystTestnet,
    AllTestnets_RococoConftiTestnet as RococoConftiTestnet,
    AllTestnets_RococoContractsTestnet as RococoContractsTestnet,
    AllTestnets_RococoCrustTestnet as RococoCrustTestnet,
    AllTestnets_RococoDaliTestnet as RococoDaliTestnet,
    AllTestnets_RococoDolphinTestnet as RococoDolphinTestnet,
    AllTestnets_RococoEthosTestnet as RococoEthosTestnet,
    AllTestnets_RococoFrequencyTestnet as RococoFrequencyTestnet,
    AllTestnets_RococoGenshiroTestnet as RococoGenshiroTestnet,
    AllTestnets_RococoHydraDxTestnet as RococoHydraDxTestnet,
    AllTestnets_RococoImbueTestnet as RococoImbueTestnet,
    AllTestnets_RococoIntegriteeTestnet as RococoIntegriteeTestnet,
    AllTestnets_RococoKabochaTestnet as RococoKabochaTestnet,
    AllTestnets_RococoKiltTestnet as RococoKiltTestnet,
    AllTestnets_RococoLitentryTestnet as RococoLitentryTestnet,
    AllTestnets_RococoMangataTestnet as RococoMangataTestnet,
    AllTestnets_RococoMd5Testnet as RococoMd5Testnet,
    AllTestnets_RococoMoonsamaTestnet as RococoMoonsamaTestnet,
    AllTestnets_RococoNodleTestnet as RococoNodleTestnet,
    AllTestnets_RococoOriginTrailParachainTestnet as RococoOriginTrailParachainTestnet,
    AllTestnets_RococoPangolinTestnet as RococoPangolinTestnet,
    AllTestnets_RococoSoraTestnet as RococoSoraTestnet,
    AllTestnets_RococoSpreehafenTestnet as RococoSpreehafenTestnet,
    AllTestnets_RococoStatemintTestnet as RococoStatemintTestnet,
    AllTestnets_RococoSubsocialTestnet as RococoSubsocialTestnet,
    AllTestnets_RococoSubzeroTestnet as RococoSubzeroTestnet,
    AllTestnets_RococoTestnet as RococoTestnet,
    AllTestnets_RococoTinkernetTestnet as RococoTinkernetTestnet,
    AllTestnets_RococoTuringTestnet as RococoTuringTestnet,
    AllTestnets_RococoUnitNetworkTestnet as RococoUnitNetworkTestnet,
    AllTestnets_RococoVirtoTestnet as RococoVirtoTestnet,
    AllTestnets_RococoWatrTestnet as RococoWatrTestnet,
    AllTestnets_RococoZeitgeistTestnet as RococoZeitgeistTestnet,
    AllTestnets_SherpaxTestnet as SherpaxTestnet,
    AllTestnets_ShibuyaTestnet as ShibuyaTestnet,
    AllTestnets_SkyekiwiTestnet as SkyekiwiTestnet,
    AllTestnets_SnowbridgeTestnet as SnowbridgeTestnet,
    AllTestnets_SoonsocialTestnet as SoonsocialTestnet,
    AllTestnets_SoraSubstrateTestnet as SoraSubstrateTestnet,
    AllTestnets_StagexTestnet as StagexTestnet,
    AllTestnets_SubdaoTestnet as SubdaoTestnet,
    AllTestnets_SubgameTestnet as SubgameTestnet,
    AllTestnets_SubspaceFarmnetTestnet as SubspaceFarmnetTestnet,
    AllTestnets_SubspaceGemini1Testnet as SubspaceGemini1Testnet,
    AllTestnets_SubspaceGemini2ATestnet as SubspaceGemini2ATestnet,
    AllTestnets_SubspaceTestnet as SubspaceTestnet,
    AllTestnets_SubstrateTestnet as SubstrateTestnet,
    AllTestnets_SumiStagingTestnet as SumiStagingTestnet,
    AllTestnets_T0RnTestnet as T0RnTestnet,
    AllTestnets_TernoaAlphanetTestnet as TernoaAlphanetTestnet,
    AllTestnets_TernoaTestnet as TernoaTestnet,
    AllTestnets_ThebifrostTestnet as ThebifrostTestnet,
    AllTestnets_UniartsTestnet as UniartsTestnet,
    AllTestnets_UniqueTestnet as UniqueTestnet,
    AllTestnets_UnitvTestnet as UnitvTestnet,
    AllTestnets_VaraTestnet as VaraTestnet,
    AllTestnets_VodkaTestnet as VodkaTestnet,
    AllTestnets_Web3GamesTestnet as Web3GamesTestnet,
    AllTestnets_WestendBridgeHubTestnet as WestendBridgeHubTestnet,
    AllTestnets_WestendCollectivesTestnet as WestendCollectivesTestnet,
    AllTestnets_WestendPichiuTestnet as WestendPichiuTestnet,
    AllTestnets_WestendStandardTestnet as WestendStandardTestnet,
    AllTestnets_WestendTestnet as WestendTestnet,
    AllTestnets_WestmintTestnet as WestmintTestnet,
    AllTestnets_WhalaTestnet as WhalaTestnet,
    AllTestnets_ZCloakTestnet as ZCloakTestnet,
    AllTestnets_ZeitgeistTestnet as ZeitgeistTestnet,
    AllTestnets_ZeroTestnet as ZeroTestnet,
    AllTestnets__3DpassTestnet as _3DpassTestnet,
  };
}

type TestnetNetworkName = keyof typeof AllTestnets;
type TestnetChain = typeof AllTestnets[TestnetNetworkName];
type TestnetId = TestnetChain['id'];
type ProductionNetworkName = keyof typeof AllChains;
type ProductionChain = typeof AllChains[ProductionNetworkName];
type ProductionChainId = ProductionChain['id'];
type ChainId = ProductionChainId | TestnetId;
type Chain = ProductionChain | TestnetChain;

export { Acala, Ajuna, AjunaTestnet, Aleph, AlephTestnet, Altair, Amplitude, ArcticTestnetRococo, ArcticTestnetStandalone, AresGladiosTestnet, AresOdyssey, Astar, Automata, AutomataContextfreeTestnet, Aventus, Bajun, Basilisk, BifrostKusama, BifrostPolkadot, BifrostTestnet, BitcountryPioneer, BitcountryTestnet, Bitgreen, Bittensor, BrainstormTestnet, Calamari, CentrifugePolkadot, CessTestnet, Chain, ChainId, ChainoliTestnet, Chainx, CharcoalTestnet, Clover, CloverTestnet, Coinversation, CoinversationTestnet, CompetitorsClub, ComposableFinance, CrabKusama, CrabStandalone, Creditcoin, CreditcoinTestnet, CrownSterling, Crust, CrustMaxwellTestnet, CrustParachain, Custom, DarwiniaPolkadot, DarwiniaPolkadot2, DarwiniaStandalone, DatahighwayTestnet, Debio, DebioTestnet, Development, DockPosMainnet, DockTestnet, DolphinTestnet, Dorafactory, DotmogTestnet, Edgeware, EdgewareTestnet, EfinityPolkadot, EfinityStandalone, EggnetTestnet, Encointer, EncointerTestnetRococo, EncointerTestnetStandalone, EquilibriumPolkadot, EquilibriumTestnet, FantourTestnet, FerrumTestnet, Frequency, GalitalTestnet, GaloisTestnet, GamepowerTestnet, GeekTestnet, Geminis, GenshiroKusama, Gm, GuildTestnet, HalongbayTestnet, Hanonycash, Hashed, HeikoKusama, HelixstreetTestnet, Hydra, Imbue, IntegriteeKusama, IntegriteePolkadot, IntegriteeTestnet, Interlay, InterlayTestnetStandalone, InterlayTestnetWestend, Ipci, IpseTestnet, JazTestnet, Joystream, JoystreamTestnet, JupiterTestnet, Kabocha, Kapex, Karura, KaruraTestnet, Khala, KhalaTestnet, Kico, KiltSpiritnet, KiltTestnetStandalone, KiltTestnetStandalone2, KiltTestnetWestend, Kintsugi, KintsugiTestnet, KlugdossierTestnet, Kpron, Kulupu, Kusama, KusamaBridgeHub, Kusari, Kylin, KylinTestnet, LaminarTestnet, Listen, Litentry, LitentryTestnet, Litmus, Logion, LogionTestnetStandalone, LogionTestnetStandalone2, LoomNetwork, Luhn, MandalaTestnet, Mangata, Manta, MantaTestnet, Mars, Mathchain, Minix, MinixTestnet, MoonbaseAlphaTestnet, Moonbeam, Moonriver, MoonshadowTestnet, MybankTestnet, Myriad, MyriadTestnet, Neatcoin, Nftmart, NftmartTestnet, NodlePolkadot, NodleTestnet, Oak, Odyssey, Omnibtc, OpalTestnet, OpportunityTestnet, OrigintrailParachain, PangolinTestnet, PangoroTestnetStandalone, PangoroTestnetWestend, Parallel, Pendulum, Phala, PhalaTestnet, PhoenixTestnet, Picasso, Pichiu, PichiuTestnet, PolkadexPolkadot, PolkadexStandalone, PolkadexTestnet, Polkadot, PolkadotCollectives, Polkasmith, Polymesh, PolymeshTestnet, PontemTestnet, PrismTestnet, ProductionChain, ProductionChainId, Quartz, RealisTestnet, Riochain, RiochainTestnet, Riodefi, RobonomicsKusama, RobonomicsTestnet, RocfinityTestnet, RococoAcurastTestnet, RococoAmplitudeTestnet, RococoAventusTestnet, RococoBajunTestnet, RococoBasiliskTestnet, RococoBifrostTestnet, RococoBitgreenTestnet, RococoBridgehubTestnet, RococoCatalystTestnet, RococoConftiTestnet, RococoContractsTestnet, RococoCrustTestnet, RococoDaliTestnet, RococoDolphinTestnet, RococoEthosTestnet, RococoFrequencyTestnet, RococoGenshiroTestnet, RococoHydraDxTestnet, RococoImbueTestnet, RococoIntegriteeTestnet, RococoKabochaTestnet, RococoKiltTestnet, RococoLitentryTestnet, RococoMangataTestnet, RococoMd5Testnet, RococoMoonsamaTestnet, RococoNodleTestnet, RococoOriginTrailParachainTestnet, RococoPangolinTestnet, RococoSoraTestnet, RococoSpreehafenTestnet, RococoStatemintTestnet, RococoSubsocialTestnet, RococoSubzeroTestnet, RococoTestnet, RococoTinkernetTestnet, RococoTuringTestnet, RococoUnitNetworkTestnet, RococoVirtoTestnet, RococoWatrTestnet, RococoZeitgeistTestnet, Sakura, ShadowKusama, Sherpax, SherpaxTestnet, ShibuyaTestnet, ShidenKusama, SkyekiwiTestnet, Snow, SnowbridgeTestnet, SoonsocialTestnet, SoraKsm, SoraSubstrate, SoraSubstrateTestnet, Spanner, Stafi, StagexTestnet, Statemine, Statemint, Subdao, SubdaoTestnet, SubgameKusama, SubgamePolkadot, SubgameStandalone, SubgameTestnet, SubsocialX, SubspaceFarmnetTestnet, SubspaceGemini1Testnet, SubspaceGemini2ATestnet, SubspaceTestnet, SubstrateTestnet, SumiStagingTestnet, Swapdex, T0RnTestnet, Tanganika, Ternoa, TernoaAlphanetTestnet, TernoaTestnet, TestnetChain, TestnetId, ThebifrostMainnet, ThebifrostTestnet, Tinker, Trustbase, Turing, Uniarts, UniartsTestnet, Unique, UniqueTestnet, UnitvTestnet, Unorthodox, VaraTestnet, VodkaTestnet, Web3GamesTestnet, WestendBridgeHubTestnet, WestendCollectivesTestnet, WestendPichiuTestnet, WestendStandardTestnet, WestendTestnet, Westlake, WestmintTestnet, WhalaTestnet, Xx, ZCloakTestnet, Zeitgeist, ZeitgeistTestnet, Zero, ZeroTestnet, _3Dpass, _3DpassTestnet };
